{
  "_args": [
    [
      {
        "raw": "dotenv-extended@^1.0.4",
        "scope": null,
        "escapedName": "dotenv-extended",
        "name": "dotenv-extended",
        "rawSpec": "^1.0.4",
        "spec": ">=1.0.4 <2.0.0",
        "type": "range"
      },
      "D:\\ChatBot\\MS_BOT_15-11-17\\intelligence-LUIS"
    ]
  ],
  "_from": "dotenv-extended@>=1.0.4 <2.0.0",
  "_id": "dotenv-extended@1.0.4",
  "_inCache": true,
  "_location": "/dotenv-extended",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/dotenv-extended-1.0.4.tgz_1477229381603_0.4026160161010921"
  },
  "_npmUser": {
    "name": "keithmorris",
    "email": "standupbass@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dotenv-extended@^1.0.4",
    "scope": null,
    "escapedName": "dotenv-extended",
    "name": "dotenv-extended",
    "rawSpec": "^1.0.4",
    "spec": ">=1.0.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dotenv-extended/-/dotenv-extended-1.0.4.tgz",
  "_shasum": "56f28bdbaadb72856c60b12e8b7cbf6c847fcdc4",
  "_shrinkwrap": null,
  "_spec": "dotenv-extended@^1.0.4",
  "_where": "D:\\ChatBot\\MS_BOT_15-11-17\\intelligence-LUIS",
  "author": {
    "name": "Keith Morris",
    "email": "standupbass@gmail.com",
    "url": "http://standupbass.wordpress.com/"
  },
  "babel": {
    "presets": [
      "es2015"
    ],
    "plugins": [
      "transform-object-rest-spread"
    ]
  },
  "bugs": {
    "url": "https://github.com/keithmorris/node-dotenv-extended/issues"
  },
  "dependencies": {
    "dotenv": "^2.0.0",
    "lodash": "^4.3.0"
  },
  "description": "A module for loading .env files and optionally loading defaults and a schema for validating all values are present.",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-preset-es2015": "^6.5.0",
    "chai": "^3.5.0",
    "coveralls": "^2.11.6",
    "del": "^2.2.0",
    "eslint": "^3.2.2",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-promise": "^2.0.0",
    "eslint-plugin-standard": "^2.0.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-eslint": "^3.0.1",
    "gulp-istanbul": "^1.0.0",
    "gulp-mocha": "^3.0.0",
    "mockery": "^1.4.0",
    "run-sequence": "^1.1.5",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "56f28bdbaadb72856c60b12e8b7cbf6c847fcdc4",
    "tarball": "https://registry.npmjs.org/dotenv-extended/-/dotenv-extended-1.0.4.tgz"
  },
  "gitHead": "dca154f142f377df24ef78c899027edefd5796f3",
  "homepage": "https://github.com/keithmorris/node-dotenv-extended#readme",
  "keywords": [
    "dotenv",
    "environment"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "keithmorris",
      "email": "standupbass@gmail.com"
    }
  ],
  "name": "dotenv-extended",
  "optionalDependencies": {},
  "readme": "# dotenv-extended\n\n[![Build Status](https://travis-ci.org/keithmorris/node-dotenv-extended.svg?branch=develop)](https://travis-ci.org/keithmorris/node-dotenv-extended)\n[![Coverage Status](https://coveralls.io/repos/github/keithmorris/node-dotenv-extended/badge.svg?branch=develop)](https://coveralls.io/github/keithmorris/node-dotenv-extended?branch=develop)\n[![Dependency Status](https://david-dm.org/keithmorris/node-dotenv-extended.svg)](https://david-dm.org/keithmorris/node-dotenv-extended)\n\n\nI've been a big fan of the [dotenv] for a quite some time (in fact, this library uses [dotenv] under the hood for the `.env` file parsing). However, while working on some bigger projects, we realized that the managing of the `.env` files became a bit of a chore. As the files changed in the development environments, it became a tedious manual process to compare and figure out what needed to be added or removed in the other environments.\n\nThis library solves some of these issues by introducing the concept of 3 files which are used together to provide environment-specific variables, default values and a validation schema:\n\n### `.env`\n\nThe environment specific file (not committed to source control). This file will have sensitive information such as usernames, passwords, api keys, etc. These would be specific to each environment and should not be committed to source control. The format is a series of key-value pairs. Any line starting with `#` or `;` are commented out and ignored.\n\n```\n# .env file\nMONGO_HOST=localhost\nMONGO_DATABASE=TestDB\nMONGO_USER=dbusername\nMONGO_PASS=dbpassword!\n```\n\n###`.env.defaults`\n\nCommon configuration defaults across all environments (commited to source control). This contains overall app configuration values that would be common across environments. The `.env.defaults` file is loaded first and then the `.env` file is loaded and will overwrite any values from the `.env.defaults` file. Format is identical to the `.env` file.\n\n### `.env.schema`\n\nDefines a schema of what variables _should_ be defined in the combination of `.env` and `.env.defaults`. Optionally, you can have the libarary throw and error if all values are not configured or if there are extra values that shouldn't be there.\n\n\nThe `.env.schema` file should only have the name of the variable and the `=` without any value:\n\n```\nMONGO_HOST=\nMONGO_DATABASE=\nMONGO_USER=\nMONGO_PASS=\n```\n\n\nI have tried to stay as compatible as possible with the [dotenv] library but there are some differences.\n\n## Installation\n\n```\nnpm i --save dotenv-extended\n```\n\n## Usage\n\nAs early as possible in your main script:\n\n```\nrequire('dotenv-extended').load();\n```\n\nCreate a `.env` file in the root directory of your project. Add environment-specific variables on new lines in the form of `NAME=VALUE`.\n\nFor example:\n\n```\nMONGO_HOST=localhost\nMONGO_DATABASE=TestDB\nMONGO_USER=dbusername\nMONGO_PASS=dbpassword!\n```\n\n`process.env` now has the keys and values you defined in your `.env` file.\n\n```javascript\nmongoose.connect('mongodb://' + process.env.MONGO_HOST + '/' + process.env.MONGO_DATABASE, {\n    user: process.env.MONGO_USER,\n    pass: process.env.MONGO_PASS\n});\n```\n\n### Load Configs from command line\n\nYou may also load the `.env` files from the command line. Add in the require `dotenv-extended/config` along with any of the options that the `load` method takes prefixed with `dotenv_config_`. e.g.:\n```\nnode -r dotenv-extended/config your_script.js\n```\n\nOr to specify load options:\n\n```\nnode -r dotenv-extended/config your_script.js dotenv_config_path=./env/.env dotenv_config_defaults=./env/.env.defaults\n```\n\n## Options\n\nDefaults are shown below:\n\n```\nrequire('dotenv-extended').load({\n\tencoding: 'utf8',\n\tsilent: true,\n\tpath: '.env',\n\tdefaults: '.env.defaults',\n\tschema: '.env.schema',\n\terrorOnMissing: false,\n\terrorOnExtra: false,\n\tassignToProcessEnv: true,\n\toverrideProcessEnv: false\n});\n```\n\nThe function always returns an object containing the variables loaded from the `.env` and `.env.defaults` files. The returned object does not contain the properties held in `process.env` but rather only the ones that are loaded from the `.env` and `.env.defaults` files.\n\n```\nvar myConfig = require('dotenv-extended').load();\n```\n\n### encoding (_default: utf8_)\n\nSets the encoding of the `.env` files\n\n### silent (_default: true_)\n\nSets whether a log message is shown when missing the `.env` or `.env.defaults` files.\n\n### path (_default: .env_)\n\nThe main `.env` file that contains your variables.\n\n### defaults (_default: .env.defaults_)\n\nThe file that default values are loaded from.\n\n### schema (_default: .env.schema_)\n\nThe file that contains the schema of what values should be available from combining `.env` and `.env.defaults`\n\n### errorOnMissing (_default: false_)\n\nCauses the library to throw a `MISSING CONFIG VALUES` error listing all of the variables missing the combined `.env` and `.env.defaults` files.\n\n### errorOnExtra (_default: false_)\n\nCauses the library to throw a `EXTRA CONFIG VALUES` error listing all of the extra variables from the combined `.env` and `.env.defaults` files.\n\n### assignToProcessEnv (_default: true_)\n\nSets whether the loaded values are assigned to the `process.env` object. If this is set, you must capture the return value of the call to `.load()` or you will not be able to use your variables.\n\n### overrideProcessEnv (_default: false_)\n\nBy defaut, `dotenv-entended` will not overwrite any varibles that are already set in the `process.env` object. If you would like to enable overwriting any already existing values, set this value to `true`.\n\n## Examples\n\nConsider the following three files:\n\n```\n# .env file\nDB_HOST=localhost\nDB_USER=databaseuser-local\nDB_PASS=databasepw!\nSHARE_URL=http://www.example.com\n```\n\n```\n# .env.defaults\nDB_USER=databaseuser\nDB_DATABASE=MyAppDB\n```\n\n```\n# .env.schema\nDB_HOST=\nDB_USER=\nDB_PASS=\nDB_DATABASE=\nAPI_KEY=\n```\n\n### Load files with default options\n\n```\nvar myConfig = require('dotenv-extended').load();\n\nmyConfig.DB_HOST === process.env.DB_HOST === \"localhost\"\nmyConfig.DB_USER === process.env.DB_USER === \"databaseuser-local\"\nmyConfig.DB_PASS === process.env.DB_PASS === \"localhost\"\nmyConfig.DB_DATABASE === process.env.DB_DATABASE === \"MyAppDB\"\nmyConfig.SHARE_URL === process.env.SHARE_URL === \"http://www.example.com\"\n```\n\n### Load files with `errorOnMissing`\n\n```\nvar myConfig = require('dotenv-extended').load({\n    errorOnMissing: true\n});\n\nThrows ERROR `MISSING CONFIG VALUES: API_KEY`\n```\n\n### Load files with `errorOnExtra`\n\n```\nvar myConfig = require('dotenv-extended').load({\n    errorOnExtra: true\n});\n\nThrows ERROR `EXTRA CONFIG VALUES: SHARE_URL`\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Change Log\n\nSee [CHANGELOG.md](CHANGELOG.md)\n\n## License\n\nSee [LICENSE](LICENSE)\n\n[dotenv]: https://www.npmjs.com/package/dotenv\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/keithmorris/node-dotenv-extended.git"
  },
  "scripts": {
    "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls",
    "lint": "gulp lint",
    "prepublish": "gulp build",
    "test": "gulp unittest"
  },
  "version": "1.0.4"
}
